- create src, dist folders

> npm init

don't install webpack globally

> npm i -D webpack webpack-cli

where
i means install
-D means --save-dev

that is,
npm i -D webpack webpack-cli
is equal to
npm install --save-dev webpack webpack-cli

=====

- add & edit src/app.js
alert('I love Webpack!');

- add & edit dist/index.html
<!DOCTYPE html>
<html>
  <head>
    <title>Webpack Test</title>
  </head>
  <body>
    <h1>Hello Webpack!</h1>
    <script src='bundle.js'></script>
  </body>
</html>

=====

- add & edit webpack.config.js
const path = require('path');

const SRC_DIR  = path.resolve(__dirname, 'src');
const DIST_DIR = path.resolve(__dirname, 'dist');

module.exports = {
  entry: path.resolve(SRC_DIR, 'app.js'),
  output: {
    path: DIST_DIR,
    filename: 'bundle.js'
  }
};

-----

we should set webpack's mode,
or it will default to 'production'
& give us a warning

we'll set its mode later
but for now, just use the default one
& ignore the warning

=====

> npx webpack

which is equal to call
> node_modules/.bin/webpack

- add .gitignore
node_modules/
dist/

==========

- update webpack.config.js
context: SRC_DIR,
entry: {
  app: './app.js', // 'app' is chunk name; './' has to be added.
}

where
context is an absolute string
to the directory that contains the entry files.

- add fav.js for app.js to import
var fav = 'Webpack is my fav!';
module.exports = fav;

- update app.js
var fav = require('./fav');
alert(fav);

==========

- update package.json to use npm scripts
"scripts": {
  "start": webpack,
  ...
}

p.s.,
just like
> npx webpack

using npm script has the same result,
that is,
when we update package.json
  "start": webpack

& then call
> npm start

which is equal to call
> ./node_modules/.bin/webpack

- update package.json to use watch mode
"start": webpack --watch
